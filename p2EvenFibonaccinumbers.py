# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
# the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the 
# sum of the even-valued terms.

limit = 4000000

# def fibonacci(x):
#     fterm1 = 1
#     fterm2 = 2
#     fterm = 0
#     for i in range(4000000):
#         fterm += (fterm1 + fterm2)..........

def fibonacciRecursive(x):
    if x < 2:
        return x
    else:
        return fibonacciRecursive(x-2) + fibonacciRecursive(x-1)

fibonacciTerm = 0
n = 1
evenFibSum = 0
while True:
    if fibonacciTerm % 2 == 0:
        evenFibSum += fibonacciTerm
        print(f'term = {fibonacciTerm}')
        print(f'sum = {evenFibSum}')
    fibonacciTerm = fibonacciRecursive(n)
    n += 1
    if fibonacciTerm > limit:
        break

print(f'last term = {fibonacciTerm}')
print(evenFibSum)